//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/InputSystem/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""KeyBoard"",
            ""id"": ""0a9ea30b-2a41-48d6-b4e2-3c78af820700"",
            ""actions"": [
                {
                    ""name"": ""MoveControl"",
                    ""type"": ""Value"",
                    ""id"": ""48f93b16-53c8-4b81-a6e2-2e91f2bd854d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AttackControl"",
                    ""type"": ""Value"",
                    ""id"": ""d47da281-5286-4f3b-9f56-371b78de6eb9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DropBoom"",
                    ""type"": ""Button"",
                    ""id"": ""494916f3-efba-4f54-a4d5-f7b1175fdfca"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenBag"",
                    ""type"": ""Button"",
                    ""id"": ""d2b282e2-ebeb-4caa-b544-a8b18f77ab37"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectItems"",
                    ""type"": ""Button"",
                    ""id"": ""a6a5dd62-3331-40ff-9e6e-5c3345f06056"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UseItems"",
                    ""type"": ""Button"",
                    ""id"": ""1e84827b-6ca5-43aa-9c55-eb61074e9d8e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PauseGame"",
                    ""type"": ""Button"",
                    ""id"": ""8c05104e-2958-4372-b8b3-22c4d35b2f5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""50582eb6-4c80-4a37-b1cf-b7c6ad91a03a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveControl"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2d8f9faf-818f-4634-8d43-618ba0b35617"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""306ad2c8-9afb-4a5d-b2f9-cca157751d0e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""77affd59-4c73-45e5-84f5-77c604ae5aaa"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6296f150-e930-4838-ac9f-813eed66b191"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""4Arrows"",
                    ""id"": ""ecb45dbe-a6a1-4749-8138-0470264610b0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackControl"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b5af79aa-703f-40b7-b18e-ee27461a6a05"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b97e8c8f-71c0-41e6-9c12-fc239e9b3510"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""040bb30a-e32b-4351-b5d7-7483b8c64adc"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6e2452af-616d-4f1f-9079-689c8c554a8a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackControl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""307192f1-b219-4b2b-b5e3-589f6d44be85"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DropBoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea03cdfb-a885-46ea-8aa2-2bdd6cc56822"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenBag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14cd0851-d75a-4796-9263-efc872ea0f7f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01c21b33-0280-4539-8a0f-181ebff0dd05"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""307ea254-5f9f-4aa1-a0c9-14be43620019"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d0129bf-5642-4760-bbac-9047c1d9701a"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""667432fa-70a0-49b3-9a11-2952ae637fec"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a595f90c-3ad1-4177-af26-c67dcf800fb5"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6bc52935-ad80-4c6a-b6a8-7ae3d055cc8e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UseItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb92b64a-e68a-475f-8417-685866dd3cf3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // KeyBoard
        m_KeyBoard = asset.FindActionMap("KeyBoard", throwIfNotFound: true);
        m_KeyBoard_MoveControl = m_KeyBoard.FindAction("MoveControl", throwIfNotFound: true);
        m_KeyBoard_AttackControl = m_KeyBoard.FindAction("AttackControl", throwIfNotFound: true);
        m_KeyBoard_DropBoom = m_KeyBoard.FindAction("DropBoom", throwIfNotFound: true);
        m_KeyBoard_OpenBag = m_KeyBoard.FindAction("OpenBag", throwIfNotFound: true);
        m_KeyBoard_SelectItems = m_KeyBoard.FindAction("SelectItems", throwIfNotFound: true);
        m_KeyBoard_UseItems = m_KeyBoard.FindAction("UseItems", throwIfNotFound: true);
        m_KeyBoard_PauseGame = m_KeyBoard.FindAction("PauseGame", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // KeyBoard
    private readonly InputActionMap m_KeyBoard;
    private List<IKeyBoardActions> m_KeyBoardActionsCallbackInterfaces = new List<IKeyBoardActions>();
    private readonly InputAction m_KeyBoard_MoveControl;
    private readonly InputAction m_KeyBoard_AttackControl;
    private readonly InputAction m_KeyBoard_DropBoom;
    private readonly InputAction m_KeyBoard_OpenBag;
    private readonly InputAction m_KeyBoard_SelectItems;
    private readonly InputAction m_KeyBoard_UseItems;
    private readonly InputAction m_KeyBoard_PauseGame;
    public struct KeyBoardActions
    {
        private @PlayerInputActions m_Wrapper;
        public KeyBoardActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveControl => m_Wrapper.m_KeyBoard_MoveControl;
        public InputAction @AttackControl => m_Wrapper.m_KeyBoard_AttackControl;
        public InputAction @DropBoom => m_Wrapper.m_KeyBoard_DropBoom;
        public InputAction @OpenBag => m_Wrapper.m_KeyBoard_OpenBag;
        public InputAction @SelectItems => m_Wrapper.m_KeyBoard_SelectItems;
        public InputAction @UseItems => m_Wrapper.m_KeyBoard_UseItems;
        public InputAction @PauseGame => m_Wrapper.m_KeyBoard_PauseGame;
        public InputActionMap Get() { return m_Wrapper.m_KeyBoard; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyBoardActions set) { return set.Get(); }
        public void AddCallbacks(IKeyBoardActions instance)
        {
            if (instance == null || m_Wrapper.m_KeyBoardActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_KeyBoardActionsCallbackInterfaces.Add(instance);
            @MoveControl.started += instance.OnMoveControl;
            @MoveControl.performed += instance.OnMoveControl;
            @MoveControl.canceled += instance.OnMoveControl;
            @AttackControl.started += instance.OnAttackControl;
            @AttackControl.performed += instance.OnAttackControl;
            @AttackControl.canceled += instance.OnAttackControl;
            @DropBoom.started += instance.OnDropBoom;
            @DropBoom.performed += instance.OnDropBoom;
            @DropBoom.canceled += instance.OnDropBoom;
            @OpenBag.started += instance.OnOpenBag;
            @OpenBag.performed += instance.OnOpenBag;
            @OpenBag.canceled += instance.OnOpenBag;
            @SelectItems.started += instance.OnSelectItems;
            @SelectItems.performed += instance.OnSelectItems;
            @SelectItems.canceled += instance.OnSelectItems;
            @UseItems.started += instance.OnUseItems;
            @UseItems.performed += instance.OnUseItems;
            @UseItems.canceled += instance.OnUseItems;
            @PauseGame.started += instance.OnPauseGame;
            @PauseGame.performed += instance.OnPauseGame;
            @PauseGame.canceled += instance.OnPauseGame;
        }

        private void UnregisterCallbacks(IKeyBoardActions instance)
        {
            @MoveControl.started -= instance.OnMoveControl;
            @MoveControl.performed -= instance.OnMoveControl;
            @MoveControl.canceled -= instance.OnMoveControl;
            @AttackControl.started -= instance.OnAttackControl;
            @AttackControl.performed -= instance.OnAttackControl;
            @AttackControl.canceled -= instance.OnAttackControl;
            @DropBoom.started -= instance.OnDropBoom;
            @DropBoom.performed -= instance.OnDropBoom;
            @DropBoom.canceled -= instance.OnDropBoom;
            @OpenBag.started -= instance.OnOpenBag;
            @OpenBag.performed -= instance.OnOpenBag;
            @OpenBag.canceled -= instance.OnOpenBag;
            @SelectItems.started -= instance.OnSelectItems;
            @SelectItems.performed -= instance.OnSelectItems;
            @SelectItems.canceled -= instance.OnSelectItems;
            @UseItems.started -= instance.OnUseItems;
            @UseItems.performed -= instance.OnUseItems;
            @UseItems.canceled -= instance.OnUseItems;
            @PauseGame.started -= instance.OnPauseGame;
            @PauseGame.performed -= instance.OnPauseGame;
            @PauseGame.canceled -= instance.OnPauseGame;
        }

        public void RemoveCallbacks(IKeyBoardActions instance)
        {
            if (m_Wrapper.m_KeyBoardActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IKeyBoardActions instance)
        {
            foreach (var item in m_Wrapper.m_KeyBoardActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_KeyBoardActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public KeyBoardActions @KeyBoard => new KeyBoardActions(this);
    public interface IKeyBoardActions
    {
        void OnMoveControl(InputAction.CallbackContext context);
        void OnAttackControl(InputAction.CallbackContext context);
        void OnDropBoom(InputAction.CallbackContext context);
        void OnOpenBag(InputAction.CallbackContext context);
        void OnSelectItems(InputAction.CallbackContext context);
        void OnUseItems(InputAction.CallbackContext context);
        void OnPauseGame(InputAction.CallbackContext context);
    }
}
