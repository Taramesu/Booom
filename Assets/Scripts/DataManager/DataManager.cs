/*
 *   This file was generated by a tool.
 *   Do not edit it, otherwise the changes will be overwritten.
 */

using System;
using System.Collections.Generic;
using UnityEngine;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.IO;
using ExcelDataClass;

[Serializable]
public class DataManager : Singleton<DataManager>
{
	private fasdff p_fasdff;
	private Entities p_Entities;

	public fasdffItem GetfasdffByID(Int32 id)
	{
		fasdffItem t = null;
		p_fasdff.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogError("can't find the id " + id + " in fasdff");
		return t;
	}

	public Dictionary<int, fasdffItem> Getfasdff()
	{
		return p_fasdff.Dict;
	}

	public EntitiesItem GetEntitiesByID(Int32 id)
	{
		EntitiesItem t = null;
		p_Entities.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogError("can't find the id " + id + " in Entities");
		return t;
	}

	public Dictionary<int, EntitiesItem> GetEntities()
	{
		return p_Entities.Dict;
	}

	public void LoadAll()
	{
		p_fasdff = Load("fasdff") as fasdff;
		p_Entities = Load("Entities") as Entities;
	}

	public void RuntimeLoadAll(Dictionary<String, System.Object> objs)
	{
		p_fasdff = objs["fasdff"] as fasdff;
		p_Entities = objs["Entities"] as Entities;
	}

	private System.Object Load(string name)
	{
		IFormatter f = new BinaryFormatter();
		TextAsset text = Resources.Load<TextAsset>("BinConfigData/" + name);
		Stream s = new MemoryStream(text.bytes);
		System.Object obj = f.Deserialize(s);
		s.Close();
		return obj;
	}
}

